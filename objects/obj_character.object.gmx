<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_character_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_character_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xspeed = 0;
yspeed = 0;
xlimit = 4;
ylimit = 10;

jspeed = 6.6
wjspeed = 3.9;

grav = 0.25;
acc = 0.75;

facing = 1;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var r = keyboard_check_direct(vk_right);
var l = keyboard_check_direct(vk_left);
var u = keyboard_check_pressed(vk_up);
var ur = keyboard_check_released(vk_up);

var air = (!place_meeting(x,y+1,par_solid))

if (air)
{
    sprite_index = spr_character_jump;
    if (place_meeting(x+1,y,par_solid))
    {
        sprite_index = spr_character_walljump;
        facing = -1;
    }
    if (place_meeting(x-1,y,par_solid))
    {
        sprite_index = spr_character_walljump;
        facing = 1;
    }
    image_speed = 0;
    image_index = yspeed &lt; 0;
    yspeed += grav;
}
else
{
    sprite_index = spr_character_idle;
}

if (u)
    if (!air) //Normal Jump
        yspeed -= jspeed;
    else
        if ((place_meeting(x+1,y,par_solid) &amp;&amp; r) || (place_meeting(x-1,y,par_solid) &amp;&amp; l))//Wall Jump
        {
            if (place_meeting(x+1,y,par_solid))
            {
                yspeed = -wjspeed;
                xspeed = -floor(xlimit*1.5);
            }
            if (place_meeting(x-1,y,par_solid))
            {
                yspeed = -wjspeed;
                xspeed = floor(xlimit*1.5);
            }
        }         

if (yspeed &gt; ylimit)
    yspeed = ylimit;

if (ur)
    if (yspeed &lt; 0)
        yspeed /= 2;

if (r)
{
    if (xspeed &lt; xlimit)
        xspeed += acc/(air+1);
}

if (l)
{
    if (xspeed &gt; -xlimit)
        xspeed -= acc/(air+1);
}
        
if (!l &amp;&amp; !r)
    xspeed -= clamp(xspeed, -acc, acc);

var xs = xspeed;
for (var xx = 0; xx &lt; abs(xspeed); xx++)
{
    var c = clamp(xs,-1,1);
    if (!place_meeting(x+c,y,par_solid))
    {
        x += c;
        xs -= c
    }
    else
    {
        xspeed = 0;
        xs = 0;
        break;
    }
}

var ys = yspeed;
for (var yy = 0; yy &lt; abs(yspeed); yy++)
{
    var c = clamp(ys,-1,1);
    if (!place_meeting(x,y+c,par_solid))
    {
        y += c;
        ys -= c
    }
    else
    {
        yspeed = 0;
        ys = 0;
        break;
    }
}

//Anims
if (!air)
{
    if (xspeed == 0)
    {
        sprite_index = spr_character_idle;
        image_speed = 0.1;
    }
    else
    {
        facing = sign(xspeed);
        if ((xspeed &gt; 0 &amp;&amp; r) || (xspeed &lt; 0 &amp;&amp; l))
        {
            sprite_index = spr_character_walk;
            image_speed = 0.15;
        }
        else
        {
            sprite_index = spr_character_slide;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, facing, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
